@{
    ViewData["Title"] = "Bağlantı Listesi";
    var physicalConnections = ViewBag.PhysicalConnections as List<BLBM_ENV.Models.BaglantiIndexViewModel> ?? new List<BLBM_ENV.Models.BaglantiIndexViewModel>();
    var virtualConnections = ViewBag.VirtualConnections as List<BLBM_ENV.Models.BaglantiIndexViewModel> ?? new List<BLBM_ENV.Models.BaglantiIndexViewModel>();
}


<link rel="stylesheet" href="https://cdn.datatables.net/1.13.6/css/dataTables.bootstrap5.min.css" />
<style>
    .filter-icon {
        cursor: pointer;
        margin-left: 5px;
        color: #6c757d;
        transition: color 0.2s;
    }


        .filter-icon:hover, .filter-icon.active {
            color: #0d6efd;
        }


    .dt-filter-dropdown {
        position: absolute;
        background: white;
        border: 1px solid #ccc;
        box-shadow: 0 2px 10px rgba(0,0,0,0.2);
        padding: 15px;
        border-radius: 5px;
        z-index: 1050;
        width: 280px;
    }


    .dt-filter-list {
        max-height: 200px;
        overflow-y: auto;
        margin-top: 10px;
        font-size: 0.9rem;
    }


    .dt-filter-item {
        padding: 2px 0;
    }


    table.dataTable thead .sorting::before, table.dataTable thead .sorting::after,
    table.dataTable thead .sorting_asc::before, table.dataTable thead .sorting_asc::after,
    table.dataTable thead .sorting_desc::before, table.dataTable thead .sorting_desc::after {
        content: "" !important;
        opacity: 0 !important;
    }
</style>


@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">@Html.Raw(TempData["SuccessMessage"])<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button></div>
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">@Html.Raw(TempData["ErrorMessage"])<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button></div>
}
@if (TempData["InfoMessage"] != null)
{
    <div class="alert alert-info alert-dismissible fade show" role="alert">@Html.Raw(TempData["InfoMessage"])<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button></div>
}


<div class="card shadow-sm mb-4">
    <div class="card-header"><div class="d-flex justify-content-between align-items-center"><h4 class="mb-0"><i class="fas fa-plug me-2"></i>Fiziksel Bağlantılar (@physicalConnections.Count)</h4><div class="btn-group"><button class="btn btn-outline-info btn-sm" id="toggleVirtualsBtn">Sanal Bağlantıları Göster/Gizle (@virtualConnections.Count)</button><button type="button" class="btn btn-primary btn-sm" data-bs-toggle="modal" data-bs-target="#manualConnectionModal"><i class="fas fa-plus me-1"></i> Manuel Bağlantı Ekle</button><button type="button" class="btn btn-info btn-sm" data-bs-toggle="modal" data-bs-target="#virtualImportModal"><i class="fas fa-magic me-1"></i> Sanal Yol Haritası Yükle</button><button type="button" class="btn btn-success btn-sm" data-bs-toggle="modal" data-bs-target="#physicalImportModal"><i class="fas fa-file-excel me-1"></i> Standart Bağlantı Yükle</button></div></div></div>
    <div class="card-body">
        <div class="table-responsive">
            <table id="fizikselBaglantiTablosu" class="table table-striped table-bordered table-sm filterable-table" style="width:100%">
                <thead><tr><th>Kaynak Cihaz</th><th>Kaynak Port</th><th>Bağlantı Türü</th><th>Link Status</th><th>Link Speed</th><th>NIC ID</th><th>Bakır MAC</th><th>Fiber MAC</th><th>WWPN</th><th>Hedef Cihaz</th><th>Hedef Port</th><th class="text-center no-sort no-filter">İşlemler</th></tr></thead>
                <tbody>
                    @foreach (var vm in physicalConnections)
                    {
                        <tr>
                            <td><a asp-controller="Envanter" asp-action="Details" asp-route-id="@vm.SourceDeviceID">@vm.SourceDeviceName</a></td>
                            <td><span class="badge bg-success">@vm.SourcePort</span></td>
                            <td>@vm.ConnectionType</td>
                            <td>@vm.LinkStatus</td>
                            <td>@vm.LinkSpeed</td>
                            <td>@vm.NicID</td>
                            <td><code>@vm.BakirMAC</code></td>
                            <td><code>@vm.FiberMAC</code></td>
                            <td><code>@vm.WWPN</code></td>
                            <td><a asp-controller="Envanter" asp-action="Details" asp-route-id="@vm.TargetDeviceID">@vm.TargetDeviceName</a></td>
                            <td><span class="badge bg-secondary">@vm.TargetPort</span></td>
                            <td class="text-center"><div class="btn-group btn-group-sm"><a asp-controller="Baglanti" asp-action="Details" asp-route-id="@vm.BaglantiID" class="btn btn-outline-info" title="Bağlantı Şemasını Görüntüle"><i class="fas fa-project-diagram"></i></a><a asp-controller="Baglanti" asp-action="Delete" asp-route-id="@vm.BaglantiID" class="btn btn-outline-danger" title="Bağlantıyı Sil"><i class="fas fa-trash-alt"></i></a></div></td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>


<div class="card shadow-sm" id="virtualConnectionsCard" style="display: none;">
    <div class="card-header bg-info-subtle"><h4 class="mb-0"><i class="fas fa-cloud me-2"></i>Sanal Bağlantılar (@virtualConnections.Count)</h4></div>
    <div class="card-body">
        <div class="table-responsive">
            <table id="sanalBaglantiTablosu" class="table table-striped table-bordered table-sm filterable-table" style="width:100%">
                <thead><tr><th>Kaynak Cihaz</th><th>Kaynak Port (Sanal)</th><th>Bağlantı Türü</th><th>Hedef Cihaz</th><th>Hedef Port (Fiziksel)</th><th class="text-center no-sort no-filter">İşlemler</th></tr></thead>
                <tbody>
                    @foreach (var vm in virtualConnections)
                    {
                        <tr>
                            <td><a asp-controller="Envanter" asp-action="Details" asp-route-id="@vm.SourceDeviceID">@vm.SourceDeviceName</a></td>
                            <td><span class="badge bg-info">@vm.SourcePort</span></td>
                            <td>@vm.ConnectionType</td>
                            <td><a asp-controller="Envanter" asp-action="Details" asp-route-id="@vm.TargetDeviceID">@vm.TargetDeviceName</a></td>
                            <td><span class="badge bg-secondary">@vm.TargetPort</span></td>
                            <td class="text-center"><div class="btn-group btn-group-sm"><a asp-controller="Baglanti" asp-action="Delete" asp-route-id="@vm.BaglantiID" class="btn btn-outline-danger" title="Sanal Bağlantıyı Sil"><i class="fas fa-trash-alt"></i></a></div></td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>


<div class="modal fade" id="manualConnectionModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <form asp-controller="Baglanti" asp-action="Create" method="post">
                <div class="modal-header"><h5 class="modal-title">Manuel Bağlantı Oluştur</h5><button type="button" class="btn-close" data-bs-dismiss="modal"></button></div><div class="modal-body">
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label class="form-label">Kaynak Cihaz</label><select name="SourceDeviceID" class="form-select" required>
                                <option value="">-- Cihaz Seçin --</option>@foreach(var device in ViewBag.AllDevices as List<BLBM_ENV.Models.Envanter>) {
                                <option value="@device.ID">@device.DeviceName</option>
                                                                }
                            </select>
                        </div><div class="col-md-6 mb-3">
                            <label class="form-label">Hedef Cihaz</label><select name="TargetDeviceID" class="form-select" required>
                                <option value="">-- Cihaz Seçin --</option>@foreach(var device in ViewBag.AllDevices as List<BLBM_ENV.Models.Envanter>) {
                                <option value="@device.ID">@device.DeviceName</option>
                                                                }
                            </select>
                        </div>
                    </div><div class="row"><div class="col-md-6 mb-3"><label class="form-label">Kaynak Port</label><input type="text" name="Source_Port" class="form-control" required /></div><div class="col-md-6 mb-3"><label class="form-label">Hedef Port</label><input type="text" name="Target_Port" class="form-control" required /></div></div><div class="row"><div class="col-md-6 mb-3"><label class="form-label">Bağlantı Türü</label><select name="ConnectionType" class="form-select"><option value="Bakır">Bakır</option><option value="Fiber">Fiber</option><option value="FC">FC</option><option value="Virtual">Virtual</option></select></div></div>
                </div><div class="modal-footer"><button type="button" class="btn btn-secondary" data-bs-dismiss="modal">İptal</button><button type="submit" class="btn btn-primary"><i class="fas fa-plus me-1"></i> Oluştur</button></div>
            </form>
        </div>
    </div>
</div>


<div class="modal fade" id="physicalImportModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog"><div class="modal-content"><form asp-controller="Baglanti" asp-action="ImportFromExcel" method="post" enctype="multipart/form-data"><div class="modal-header"><h5 class="modal-title">Standart Bağlantı Listesi Yükle</h5><button type="button" class="btn-close" data-bs-dismiss="modal"></button></div><div class="modal-body"><div class="mb-3"><label class="form-label">Excel Dosyası (.xlsx)</label><input class="form-control" type="file" name="excelFile" accept=".xlsx" required></div><hr /><div class="form-check form-switch"><input class="form-check-input" type="checkbox" name="deleteAll" value="true" id="deleteAllPhysical"><label class="form-check-label fw-bold" for="deleteAllPhysical">Mevcut Kayıtları Sil ve Yükle</label></div><div class="alert alert-danger mt-2"><strong>Dikkat:</strong> Bu seçeneği işaretlerseniz, veritabanındaki <strong>tüm bağlantı ve port detay kayıtları kalıcı olarak silinecektir!</strong></div></div><div class="modal-footer"><button type="button" class="btn btn-secondary" data-bs-dismiss="modal">İptal</button><button type="submit" class="btn btn-success"><i class="fas fa-upload me-1"></i> Yükle</button></div></form></div></div>
</div>


<!-- GÜNCELLENDİ: Sanal Yol Haritası Yükleme Modalı -->
<div class="modal fade" id="virtualImportModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form asp-controller="Baglanti" asp-action="ImportVirtualPathFromExcel" method="post" enctype="multipart/form-data">
                <div class="modal-header">
                    <h5 class="modal-title">Sanal Yol Haritası Yükle</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <p>Bu seçenek, sanal yolları fiziksel bağlantılar üzerinden çözümleyerek oluşturur.</p>
                    <div class="mb-3">
                        <label class="form-label">Excel Dosyası (.xlsx)</label>
                        <input class="form-control" type="file" name="excelFile" accept=".xlsx" required>
                    </div>
                    <hr />
                    <!-- YENİ EKLENDİ: Sanal bağlantıları silme seçeneği -->
                    <div class="form-check form-switch">
                        <input class="form-check-input" type="checkbox" name="deleteVirtuals" value="true" id="deleteVirtualsSwitch">
                        <label class="form-check-label fw-bold" for="deleteVirtualsSwitch">Mevcut Sanal Bağlantıları Sil ve Yükle</label>
                    </div>
                    <!-- YENİ EKLENDİ: Uyarı mesajı -->
                    <div class="alert alert-danger mt-2">
                        <strong>Dikkat:</strong> Bu seçeneği işaretlerseniz, yükleme yapmadan önce veritabanındaki <strong>türü "Virtual" ile başlayan tüm bağlantı kayıtları kalıcı olarak silinecektir!</strong>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">İptal</button>
                    <button type="submit" class="btn btn-info"><i class="fas fa-magic me-1"></i> İşle ve Yükle</button>
                </div>
            </form>
        </div>
    </div>
</div>


@section Scripts {
    <script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.6/js/dataTables.bootstrap5.min.js"></script>
    <script>
        $(document).ready(function () {
            $('body').append('<div class="dt-filter-dropdown" style="display:none;"></div>');
            var dropdown = $('.dt-filter-dropdown');
            var tables = {};


            $('.filterable-table').each(function() {
                var tableId = $(this).attr('id');
                var table = $(this).DataTable({
                    "ordering": false,
                    pageLength: -1,
                    lengthMenu: [ [10, 25, 50, 100, -1], [10, 25, 50, 100, "Tümü"] ],
                    language: { url: '//cdn.datatables.net/plug-ins/1.13.6/i18n/tr.json' },
                    columnDefs: [
                        { "targets": 'no-sort no-filter', "orderable": false },
                        {
                            "targets": "_all",
                            "render": function(data, type, row) {
                                if (type === 'filter' || type === 'sort') {
                                    return $('<div>').html(data).text().trim();
                                }
                                return data;
                            }
                        }
                    ],
                    initComplete: function () {
                        this.api().columns().every(function () {
                            var column = this;
                            var header = $(column.header());
                            if (header.hasClass('no-filter') || header.text().trim() === 'İşlemler') return;
                            header.append('<i class="fas fa-filter filter-icon"></i>');
                        });
                    }
                });
                tables[tableId] = table;
            });


            $('.filterable-table thead').on('click', '.filter-icon', function (e) {
                e.stopPropagation();
                var icon = $(this);
                var header = icon.parent();
                var tableId = header.closest('table').attr('id');
                var table = tables[tableId];
                var columnIndex = header.index();
                var column = table.column(columnIndex);


                var currentSearch = column.search();
                var content = `<input type="text" class="form-control form-control-sm mb-2 dropdown-search" placeholder="Seçeneklerde ara..."><div class="d-flex justify-content-between mb-2"><button class="btn btn-sm btn-outline-primary select-all">Tümünü Seç</button><button class="btn btn-sm btn-outline-secondary clear-filter">Filtreyi Temizle</button></div><div class="dt-filter-list"></div>`;
                dropdown.html(content).data('tableId', tableId).data('columnIndex', columnIndex);


                var uniqueValues = [];
                var hasBlanks = false;


                column.data().unique().sort().each(function (d, j) {
                    var val = d ? d.toString().trim() : "";
                    if (val) {
                        if (uniqueValues.indexOf(val) === -1) uniqueValues.push(val);
                    } else { hasBlanks = true; }
                });


                var searchTerms = currentSearch ? currentSearch.replace(/(^\^|\$$|\\\|)/g, '').split('|') : [];


                dropdown.find('.dt-filter-list').append(
                    `<div class="form-check dt-filter-item"><input class="form-check-input select-all-checkbox" type="checkbox"><label class="form-check-label fw-bold">(Tümünü Seç)</label></div><hr class="my-1">`);


                uniqueValues.forEach(function (value, j) {
                    var isChecked = !currentSearch || searchTerms.includes(value);
                    dropdown.find('.dt-filter-list').append(
                        `<div class="form-check dt-filter-item"><input class="form-check-input filter-checkbox" type="checkbox" value="${value}" ${isChecked ? 'checked' : ''}><label class="form-check-label">${value}</label></div>`
                    );
                });


                if(hasBlanks){
                    var isBlanksChecked = !currentSearch || searchTerms.includes("^$");
                     dropdown.find('.dt-filter-list').append(
                        `<div class="form-check dt-filter-item"><input class="form-check-input filter-checkbox-blank" type="checkbox" ${isBlanksChecked ? 'checked' : ''}><label class="form-check-label fst-italic">(Boş Olanlar)</label></div>`
                    );
                }


                updateSelectAllCheckboxState(dropdown);


                var pos = icon.offset();
                var dropdownWidth = dropdown.outerWidth();
                var windowWidth = $(window).width();
                var proposedLeft = pos.left - dropdownWidth + icon.outerWidth();
                if (proposedLeft + dropdownWidth > windowWidth) { proposedLeft = windowWidth - dropdownWidth - 15; }
                if (proposedLeft < 0) { proposedLeft = 15; }
                dropdown.css({ top: pos.top + icon.outerHeight(), left: proposedLeft, display: 'block' });
            });


            function applyFilter(dropdown) {
                var tableId = dropdown.data('tableId');
                var column = tables[tableId].column(dropdown.data('columnIndex'));
                var checkedValues = [];
                dropdown.find('.filter-checkbox:checked').each(function() { checkedValues.push($(this).val()); });
                var blankIsChecked = dropdown.find('.filter-checkbox-blank').is(':checked');
                var totalOptions = dropdown.find('.filter-checkbox').length + (dropdown.find('.filter-checkbox-blank').length > 0 ? 1 : 0);
                var selectedOptions = checkedValues.length + (blankIsChecked ? 1 : 0);


                if(selectedOptions === 0 || selectedOptions === totalOptions) {
                    column.search('').draw();
                } else {
                    var regexParts = checkedValues.map(v => `^${v.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&')}$`);
                    if(blankIsChecked) { regexParts.push("^$"); }
                    column.search(regexParts.join('|'), true, false).draw();
                }
                $(column.header()).find('.filter-icon').toggleClass('active', !!column.search());
                updateSelectAllCheckboxState(dropdown);
            }


            function updateSelectAllCheckboxState(dropdown) {
                 var allValueCheckboxes = dropdown.find('.filter-checkbox, .filter-checkbox-blank');
                 var checkedValueCheckboxes = allValueCheckboxes.filter(':checked');
                 var selectAll = dropdown.find('.select-all-checkbox');


                 if (allValueCheckboxes.length > 0 && allValueCheckboxes.length === checkedValueCheckboxes.length) {
                     selectAll.prop('checked', true).prop('indeterminate', false);
                 } else if (checkedValueCheckboxes.length > 0) {
                     selectAll.prop('checked', false).prop('indeterminate', true);
                 } else {
                     selectAll.prop('checked', false).prop('indeterminate', false);
                 }
            }


            $(document).on('change', '.select-all-checkbox', function() {
                var dropdown = $(this).closest('.dt-filter-dropdown');
                dropdown.find('.filter-checkbox:visible, .filter-checkbox-blank:visible').prop('checked', $(this).is(':checked'));
                applyFilter(dropdown);
            });


            $(document).on('click', '.select-all', function() { $(this).closest('.dt-filter-dropdown').find('.select-all-checkbox').prop('checked', true).trigger('change'); });
            $(document).on('click', '.clear-filter', function() { $(this).closest('.dt-filter-dropdown').find('.select-all-checkbox').prop('checked', false).trigger('change'); });
            $(document).on('change', '.filter-checkbox, .filter-checkbox-blank', function () { applyFilter($(this).closest('.dt-filter-dropdown')); });
            $(document).on('keyup', '.dropdown-search', function() {
                var searchTerm = $(this).val().toLowerCase();
                $(this).closest('.dt-filter-dropdown').find('.dt-filter-item').each(function() {
                    if(!$(this).find('.select-all-checkbox').length > 0){
                         $(this).toggle($(this).find('label').text().toLowerCase().includes(searchTerm));
                    }
                });
            });
            $(document).on('click', function (e) { if (!$(e.target).closest('.dt-filter-dropdown, .filter-icon').length) { $('.dt-filter-dropdown').hide(); } });
            $('#toggleVirtualsBtn').on('click', function() {
                $('#virtualConnectionsCard').slideToggle();
            });
        });
    </script>
}