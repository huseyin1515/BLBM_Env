@using System.Text.Json
@using BLBM_ENV.Models

@{
    ViewData["Title"] = "Detaylar: " + Model.DeviceName;
    var allConnectionsJson = JsonSerializer.Serialize(ViewBag.AllConnections);
    var sortedUnifiedPortList = ViewBag.UnifiedPortList as List<UnifiedPortViewModel> ?? new List<UnifiedPortViewModel>();
}

<style>
    .form-step, .conditional-field {
        display: none;
    }

    .form-row-wrapper {
        display: flex;
        flex-wrap: wrap;
        align-items: flex-start;
        gap: 1rem;
    }

    .form-step, .conditional-field {
        flex: 0 1 250px;
    }
</style>

<div>
    <div class="d-flex justify-content-between align-items-center mb-3">
        <div>
            <h1 class="display-6 mb-0">@Model.DeviceName</h1>
            <p class="text-muted mb-0">Cihaz Detayları ve Bağlantı Yönetimi</p>
        </div>
        <div>
            <a asp-action="Edit" asp-route-id="@Model.ID" class="btn btn-outline-warning"><i class="fas fa-pencil-alt me-1"></i> Cihazı Düzenle</a>
            <a asp-action="Index" class="btn btn-outline-secondary"><i class="fas fa-arrow-left me-1"></i> Listeye Geri Dön</a>
        </div>
    </div>
    <hr />

    <div class="card mb-4 shadow-sm">
        <div class="card-header bg-light"><h5 class="mb-0"><i class="fas fa-server me-2 text-primary"></i>Cihaz Bilgileri</h5></div>
        <div class="card-body">
            <dl class="row">
                <div class="col-md-6">
                    <dt class="col-sm-5">Cihaz Adı</dt><dd class="col-sm-7">@Model.DeviceName</dd>
                    <dt class="col-sm-5">Tür</dt><dd class="col-sm-7"><span class="badge bg-primary">@Model.Tur</span></dd>
                    <dt class="col-sm-5">Model</dt><dd class="col-sm-7">@Model.Model</dd>
                    <dt class="col-sm-5">Servis Etiketi / Seri No</dt><dd class="col-sm-7"><code>@Model.ServiceTagSerialNumber</code></dd>
                    <dt class="col-sm-5">İşletim Sistemi</dt><dd class="col-sm-7">@Model.OperatingSystem</dd>
                </div>
                <div class="col-md-6">
                    <dt class="col-sm-5">Yönetim IP Adresi</dt><dd class="col-sm-7">@Model.IpAddress</dd>
                    <dt class="col-sm-5">ILO / IDRAC IP</dt><dd class="col-sm-7">@Model.IloIdracIp</dd>
                    <dt class="col-sm-5">VCenter Adresi</dt><dd class="col-sm-7">@Model.VcenterAddress</dd>
                    <dt class="col-sm-5">Cluster</dt><dd class="col-sm-7">@Model.ClusterName</dd>
                </div>
                <div class="col-12"><hr /><dt class="col-sm-3">Fiziksel Konum</dt><dd class="col-sm-9">@Model.Location - Kabin: @Model.Kabin (@Model.RearFront) - U: @Model.KabinU</dd></div>
            </dl>
        </div>
    </div>

    <div class="card mb-4 shadow-sm">
        <div class="card-header bg-light"><h5 class="mb-0"><i class="fas fa-network-wired me-2 text-success"></i>Mevcut Bağlantılar ve Port Detayları</h5></div>
        <div class="card-body">
            <div class="table-responsive">
                <table id="portDetailsTable" class="table table-striped table-hover table-sm align-middle">
                    <thead class="table-dark">
                        <tr>
                            <th>Port (@Model.DeviceName)</th>
                            <th>Tür</th>
                            <th>Link Durumu</th>
                            <th>Link Hızı</th>
                            <th>Bakır MAC</th>
                            <th>Fiber MAC</th>
                            <th>WWPN</th>
                            <th>Karşı Cihaz</th>
                            <th>Karşı Port</th>
                            <th class="text-center no-filter">İşlemler</th>
                        </tr>
                    </thead>
                    <tbody id="port-list-body">
                        @if (!sortedUnifiedPortList.Any())
                        {
                            <tr>
                                <td colspan="10" class="text-center p-3 text-muted">Bu cihaza ait kayıtlı bağlantı veya port detayı bulunmamaktadır.</td>
                            </tr>
                        }
                        else
                        {
                            @foreach (var item in sortedUnifiedPortList)
                            {
                                <tr class="port-row @(item.IsVirtual ? "table-info" : "")">
                                    <td><strong><span class="badge bg-primary fs-6">@item.Port</span></strong></td>
                                    <td>@item.Type</td>
                                    <td>@item.LinkStatus</td>
                                    <td>@item.LinkSpeed</td>
                                    <td><code>@item.BakirMAC</code></td>
                                    <td><code>@item.FiberMAC</code></td>
                                    <td><code>@item.WWPN</code></td>
                                    @if (item.IsConnected)
                                    {
                                        <td>
                                            @if (item.RemoteDevice != null)
                                            {
                                                <a asp-action="Details" asp-route-id="@item.RemoteDevice.ID">@item.RemoteDevice.DeviceName</a>
                                            }
                                        </td>
                                        <td>
                                            <span class="badge bg-secondary">@item.RemotePort</span>
                                        </td>
                                    }
                                    else
                                    {
                                        <td colspan="2" class="text-center fst-italic text-muted">Boşta / Bağlantı Yok</td>
                                    }
                                    <td class="text-center">
                                        <div class="btn-group btn-group-sm">
                                            <a asp-controller="Baglanti" asp-action="Edit" asp-route-id="@item.ConnectionID" class="btn btn-outline-warning" title="Port Detayını Düzenle"><i class="fas fa-pencil-alt"></i></a>
                                            <a asp-controller="Baglanti" asp-action="Delete" asp-route-id="@item.ConnectionID" class="btn btn-outline-danger" title="Bağlantıyı/Portu Sil"><i class="fas fa-trash-alt"></i></a>
                                        </div>
                                    </td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <div class="card shadow-sm">
        <div class="card-header bg-light"><h5 class="mb-0"><i class="fas fa-plus-circle me-2 text-info"></i>Yeni Bağlantı Oluştur</h5></div>
        <div class="card-body">
            <form asp-controller="Baglanti" asp-action="Create" method="post">
                @Html.AntiForgeryToken()
                <input type="hidden" name="SourceDeviceID" value="@Model.ID" />
                <div class="form-row-wrapper">
                    <div class="mb-3">
                        <label class="form-label fw-bold">1. Kaynak Port</label>
                        <input type="text" id="kaynakPortInput" name="Source_Port" class="form-control" required />
                        <div id="kaynakPortWarning" class="alert alert-warning p-2 mt-2" style="display: none;"></div>
                    </div>
                    <div class="mb-3 form-step" id="targetTypeContainer"><label class="form-label fw-bold">2. Hedef Cihaz Türü</label><select id="targetDeviceTypeFilter" class="form-select"><option value="">-- Tüm Türler --</option><option value="NW Switch">NW Switch</option><option value="SAN Switch">SAN Switch</option><option value="Server">Server</option><option value="Storage">Storage</option></select></div>
                    <div class="mb-3 form-step" id="targetDeviceContainer"><label class="form-label fw-bold">3. Hedef Cihaz</label><select id="targetDeviceSelect" name="TargetDeviceID" class="form-select" required></select></div>
                    <div class="mb-3 form-step" id="hedefPortContainer">
                        <label class="form-label fw-bold">4. Hedef Port</label>
                        <input type="text" id="hedefPortInput" name="Target_Port" class="form-control" required />
                        <div id="hedefPortWarning" class="alert alert-warning p-2 mt-2" style="display: none;"></div>
                    </div>
                    <div class="mb-3 form-step" id="connectionTypeContainer">
                        <label class="form-label fw-bold">5. Bağlantı Türü</label>
                        <select name="ConnectionType" id="connectionTypeSelect" class="form-select">
                            <option value="">-- Tür Seçin --</option>
                            <option value="FC">FC</option>
                            <option value="Bakır">Bakır</option>
                            <option value="Virtual FC">Virtual FC</option>
                            <option value="Virtual Bakır">Virtual Bakır</option>
                        </select>
                    </div>
                    <div class="conditional-field" id="sourceDetailWrapper"><label class="form-label fw-bold" id="sourceDetailLabel"></label><input type="text" id="sourceDetailInput" class="form-control" /></div>
                    <div class="conditional-field" id="targetDetailWrapper"><label class="form-label fw-bold" id="targetDetailLabel"></label><input type="text" id="targetDetailInput" class="form-control" /></div>
                    <div class="mb-3 form-step" id="linkDetailsContainer">
                        <label class="form-label fw-bold">Link Durumu</label><select name="Source_LinkStatus" class="form-select mb-2"><option value="Up">Up</option><option value="Down">Down</option></select>
                        <label class="form-label fw-bold">Link Hızı</label><input type="text" name="Source_LinkSpeed" class="form-control" />
                    </div>
                </div>
                <div class="form-group mt-3 text-end">
                    <button type="submit" class="btn btn-success form-step" id="createConnectionBtn"><i class="fas fa-plus me-1"></i> Bağlantıyı Oluştur</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            if ($('#portDetailsTable').length > 0 && @sortedUnifiedPortList.Count > 0) {
                var portTable = $('#portDetailsTable').DataTable({
                    ordering: false,
                    paging: false,
                    info: false,
                    dom: 'rt',
                    language: { url: '//cdn.datatables.net/plug-ins/1.13.6/i18n/tr.json' },
                    columnDefs: [ { "targets": '.no-filter', "searchable": false } ],
                    initComplete: function () {
                        this.api().columns().every(function () {
                            var column = this;
                            var header = $(column.header());
                            if (header.hasClass('no-filter')) return;
                            var originalTitle = header.html();
                            header.html(`<div class="d-flex justify-content-between align-items-center"><span class="header-text">${originalTitle}</span><i class="fas fa-search search-icon"></i></div>`);
                        });
                    }
                });

                $('#portDetailsTable thead').on('click', '.search-icon', function (e) {
                    e.stopPropagation();
                    var header = $(this).closest('th');
                    closeAllSearchInputs();
                    var headerTextSpan = header.find('.header-text');
                    var originalTitle = headerTextSpan.text().trim();
                    var searchInput = $(`<input type="text" class="form-control form-control-sm column-search" placeholder="${originalTitle} içinde ara...">`);
                    headerTextSpan.html(searchInput);
                    $(this).hide();
                    searchInput.focus();
                });

                $('#portDetailsTable thead').on('keyup', 'input.column-search', function (e) {
                    e.stopPropagation();
                    var columnIndex = $(this).closest('th').index();
                    portTable.column(columnIndex).search(this.value).draw();
                });

                function closeAllSearchInputs() {
                    $('#portDetailsTable thead th').each(function() {
                        var header = $(this);
                        if (header.find('input.column-search').length > 0) {
                            var originalTitle = header.find('input.column-search').attr('placeholder').replace(' içinde ara...', '');
                            header.find('.header-text').html(originalTitle);
                            header.find('.search-icon').show();
                        }
                    });
                }

                $(document).on('click', function(e) {
                    if (!$(e.target).is("input.column-search") && !$(e.target).is(".search-icon")) {
                        closeAllSearchInputs();
                    }
                });
            }

            const allConnections = @Html.Raw(allConnectionsJson);
            const allDeviceOptions = @Html.Raw(JsonSerializer.Serialize(((List<Envanter>)ViewBag.AllDevicesForSelectList).Select(d => new { id = d.ID, name = d.DeviceName, tur = d.Tur })));
            const sourceDeviceType = '@Model.Tur';
            const formElements = {
                kaynakPort: $('#kaynakPortInput'),
                targetTypeFilter: $('#targetDeviceTypeFilter'),
                targetDevice: $('#targetDeviceSelect'),
                hedefPort: $('#hedefPortInput'),
                connectionType: $('#connectionTypeSelect'),
                sourceDetailWrapper: $('#sourceDetailWrapper'),
                sourceDetailLabel: $('#sourceDetailLabel'),
                sourceDetailInput: $('#sourceDetailInput'),
                targetDetailWrapper: $('#targetDetailWrapper'),
                targetDetailLabel: $('#targetDetailLabel'),
                targetDetailInput: $('#targetDetailInput'),
                linkDetailsContainer: $('#linkDetailsContainer'),
                submitBtn: $('#createConnectionBtn')
            };
            const containers = {
                targetType: $('#targetTypeContainer'),
                targetDevice: $('#targetDeviceContainer'),
                hedefPort: $('#hedefPortContainer'),
                connectionType: $('#connectionTypeContainer')
            };
            function toggleElement(element, show) {
                if (show && !element.is(':visible')) { element.fadeIn('fast'); }
                else if (!show && element.is(':visible')) { element.fadeOut('fast'); }
            }
            function updateFormState() {
                const kaynakPortVal = formElements.kaynakPort.val().trim();
                const targetTypeVal = formElements.targetTypeFilter.val();
                const targetDeviceVal = formElements.targetDevice.val();
                const hedefPortVal = formElements.hedefPort.val().trim();
                const connectionTypeVal = formElements.connectionType.val();
                toggleElement(containers.targetType, !!kaynakPortVal);
                toggleElement(containers.targetDevice, !!targetTypeVal);
                toggleElement(containers.hedefPort, !!targetDeviceVal);
                toggleElement(containers.connectionType, !!hedefPortVal);
                let shouldShowDetails = false;
                if (connectionTypeVal) {
                    const targetDeviceType = formElements.targetDevice.find('option:selected').data('tur');
                    switch (connectionTypeVal) {
                        case 'FC':
                            shouldShowDetails = true;
                            if (sourceDeviceType === 'SAN Switch' || targetDeviceType === 'SAN Switch') { updateFields('WWPN', 'Source_WWPN', 'Target_WWPN'); } else { updateFields('Fiber MAC', 'Source_FiberMAC', 'Target_FiberMAC'); }
                            break;
                        case 'Bakır':
                            shouldShowDetails = true;
                            updateFields('Bakır MAC', 'Source_BakirMAC', 'Target_BakirMAC');
                            break;
                        case 'Virtual FC':
                            shouldShowDetails = true;
                            updateFields('Fiber MAC', 'Source_FiberMAC', 'Target_FiberMAC');
                            break;
                        case 'Virtual Bakır':
                            shouldShowDetails = true;
                            updateFields('Bakır MAC', 'Source_BakirMAC', 'Target_BakirMAC');
                            break;
                    }
                }
                toggleElement(formElements.sourceDetailWrapper, shouldShowDetails);
                toggleElement(formElements.targetDetailWrapper, shouldShowDetails);
                toggleElement(formElements.linkDetailsContainer, shouldShowDetails);
                toggleElement(formElements.submitBtn, shouldShowDetails);
            }
            function updateFields(labelText, sourceName, targetName) {
                formElements.sourceDetailLabel.text(`Kaynak ${labelText}`);
                formElements.sourceDetailInput.attr('name', sourceName);
                formElements.targetDetailLabel.text(`Hedef ${labelText}`);
                formElements.targetDetailInput.attr('name', targetName);
            }
            $('form input, form select').on('input change', updateFormState);
            formElements.targetTypeFilter.on('change', function() {
                const selectedType = $(this).val();
                formElements.targetDevice.empty().append('<option value="">-- Cihaz Seçin --</option>');
                const filteredDevices = selectedType === "" ? allDeviceOptions : allDeviceOptions.filter(d => d.tur === selectedType);
                $.each(filteredDevices, function(i, device) {
                    formElements.targetDevice.append($('<option>', { value: device.id, 'data-tur': device.tur, text: device.name }));
                });
                formElements.targetDevice.val('');
                updateFormState();
            });
            function checkPortUsage(portInput, deviceName, warningDiv) {
                const enteredPort = portInput.val().trim();
                if (!enteredPort || !deviceName) {
                    warningDiv.slideUp();
                    return;
                }
                const connectionInUse = allConnections.find(conn =>
                    (conn.SourceDeviceName === deviceName && conn.SourcePort && conn.SourcePort.toLowerCase() === enteredPort.toLowerCase()) ||
                    (conn.TargetDeviceName === deviceName && conn.TargetPort && conn.TargetPort.toLowerCase() === enteredPort.toLowerCase())
                );
                if (connectionInUse) {
                    const otherDevice = connectionInUse.SourceDeviceName === deviceName ? connectionInUse.TargetDeviceName : connectionInUse.SourceDeviceName;
                    warningDiv.html(`<strong>Uyarı:</strong> Bu port zaten <strong>${otherDevice}</strong> cihazına bağlı.`).slideDown();
                } else {
                    warningDiv.slideUp();
                }
            }
            formElements.kaynakPort.on('input', function() {
                checkPortUsage($(this), '@Model.DeviceName', $('#kaynakPortWarning'));
            });
            function checkTargetPort() {
                const targetDeviceName = formElements.targetDevice.find('option:selected').text();
                checkPortUsage(formElements.hedefPort, targetDeviceName, $('#hedefPortWarning'));
            }
            formElements.hedefPort.on('input', checkTargetPort);
            formElements.targetDevice.on('change', checkTargetPort);
        });
    </script>
}